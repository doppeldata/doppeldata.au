---
title: "Contact Us"
description: ""
date: ""
toc: true
number-sections: false
favicon: ../assets/images/image3-Photoroom.png
format:
  html:
    css: "assets/css/contact.css"
    page-layout: full
    other-links:
      - text: "ðŸ“§ Mail"
        href: mailto:info@doppeldata.au
      - text: "Github"
        href: https://github.com/doppeldata
    code-fold: true
execute:
  echo: false
---

<style>
  /* Force hiding of the title */
  .pagelayout-title,
  .pagelayout-title h1,
  h1.pagetitle, /* Specific targeting for standalone titles */
  h1 {
    display: none !important;
    visibility: hidden !important;
    color: transparent !important;
  }
</style>

## <span style="color: #cc0000; font-weight: bold"> [**Contact Us**]{.large}

<br/>

Please fill out the form below or connect with us through one of our channels. 

If weâ€™re unable to assist, we can help connect you with someone who can. 

Alternatively, explore the contact details of [Bioinformaticians/Statistical Geneticists](contact.html#adelaide-bioinformatics-community) in the Adelaide community who might be able to provide support.

<br/>

<form
  action="https://formspree.io/f/mgvvpbzb"
  method="POST" 
  style="max-width: 600px; margin: auto;">
  
  <label for="name">Name:</label><br>
  <input type="text" id="name" name="name" 
         style="width: 100%; border: 2px solid #95b540; padding: 8px;" 
         required><br><br>

  <label for="email">Email:</label><br>
  <input type="email" id="email" name="email" 
         style="width: 100%; border: 2px solid #95b540; padding: 8px;" 
         required><br><br>

  <label for="subject">Subject:</label><br>
  <select id="subject" name="subject" 
          style="width: 100%; border: 2px solid #95b540; padding: 8px;">
    <option value="" disabled selected>Select a subject</option>
    <option value="Services, Costs &/or Quote">Services, Costs &/or Quote</option>
    <option value="Careers/Employment Opportunities">Careers/Employment Opportunities</option>
    <option value="Investment">Investment</option>
    <option value="Media">Media</option>
    <option value="General Enquiries">General Enquiries</option>
  </select><br><br>

  <label for="message">Message:</label><br>
  <textarea id="message" name="message" rows="5" 
            style="width: 100%; border: 2px solid #95b540; padding: 8px;" 
            required></textarea>

  <input type="submit" value="Submit" 
         style="background-color: #E69F00; color: white; padding: 10px 20px; border: none; cursor: pointer;">
</form>

<br><br>

## <span style="color: #2a71d0; font-weight: bold"> **Adelaide Computational Biology Community**

Below is a list of bionformaticans, statistical geneticists, computational biologist and data scientist in the Adelaide area.  

If you would like to add your contact details, please [reach out](mailto:community@doppeldata.au). 

<br>

```{r, include=TRUE}
library(tidyverse)
library(readxl)
library(reactable)
library(glue)
library(htmltools)

df <- here::here(
  "contact", "assets", "data", "Adelaide bioinformaticians.xlsx"
) %>% 
  read_excel()

drop_filter <- function(values, name, id = NULL, sort = TRUE) {
  values <- unlist(values)
  if (sort) values <- sort(values)
  tags$select(
    # Set to undefined to clear the filter
    onchange = sprintf(
      "Reactable.setFilter('%s', '%s', event.target.value || undefined)",
      id, name
    ),
    # "All" has an empty value to clear the filter, and is the default option
    tags$option(value = "", "All"),
    lapply(unique(values), tags$option),
    "aria-label" = sprintf("Filter %s", name),
    style = "width: 100%; height: 28px;"
  )
}
tbl_id <- "tbl-contacts"

## Just for some more ideas
grp_leaders <- c(
  "Anna Sheppard", "Bastien Llamas", "David Adelson", "Rob Edwards",
  "Feargal Ryan", "Fuyi Li", "Stefano Mangiola"
)
postdoc <- c(
  "Alastair Ludington", "Alison Gardner", "Cathal King", "Chris Ward",
  "Holly Pinkney", "Jacqueline Rehn", "Liza Kretzschmar", "Mark Corbett", 
  "Michael Roach", "Stevie Pederson", "Yassine Souilmi"
)

df %>% 
  mutate(
    ## I'm a trainspotter. Sorry...
    Institute = Institute %>% 
      str_replace_all("^Adelaide$", "The University of Adelaide") %>% 
      str_replace_all("(Australian Centre for Ancient DNA)", "ACAD (\\1)") %>% 
      str_replace_all("BODL", "Black Ochre Data Labs") %>% 
      str_replace_all("^CCB$", "CCB (Centre for Cancer Biology)") %>% 
      str_replace_all("^Flinders$", "Flinders University") %>% 
      str_replace_all("^AWRI$", "AWRI (Australian Wine Research Institute)") %>% 
      str_replace_all("^SAGC$", "SAGC (SA Genomics Consortium)") %>% 
      str_replace_all("^SAM$", "SA Museum"),
    ## Just thought I'd play with a different idea
    Position = case_when(
      !is.na(student) ~ paste(student, "Student"),
      Name == "Jimmy Breen" ~ "Chief Data Scientist",
      Name %in% grp_leaders ~ "Group Leader",
      Name %in% postdoc ~ "Postdoctoral Fellow",
      TRUE ~ ""
    ),
    ## Nerd alert
    email = ifelse(is.na(email), "", glue("<a href='mailto:{str_to_lower(email)}' target='_blank'><i class='fas fa-envelope' style='color: #6495ED;'></i></a>")),
    Name = str_to_title(Name),
    ## Start tidying up the social media links
    ## We could even add a homepage option when we re-collect the info
    ORCID = ifelse(is.na(ORCID), "", glue("https://orcid.org/{ORCID}")),
    github = ifelse(is.na(github), "", glue("https://github.com/{github}")),
    twitter = ifelse(is.na(twitter), "", glue("https://twitter.com/{twitter}")),
    ## These URLs are a bit weird
    mastadon = case_when(
      is.na(mastadon) ~ "",
      str_count(mastadon, "@") == 2 ~ paste0(
        "https://", str_replace_all(mastadon, "@(.+)@(.+)", "\\2/@\\1")
      ),
      str_count(mastadon, "@") == 1  ~ paste0("https://mastodon.social/", mastadon),
      TRUE ~ paste0("https://mastodon.social/@", mastadon)
    ),
    ## There's also some flexibility in these that needs handling
    bluesky = case_when(
      is.na(bluesky) ~ "",
      str_count(bluesky, "\\.") > 0 ~ "https://bsky.app/profile/{bluesky}",
      TRUE ~ "https://bsky.app/profile/{bluesky}.bsky.social"
    )
  ) %>% 
  chop(Institute) %>% # Make a list
  dplyr::rename(mastodon = mastadon, orcid = ORCID) %>% # Mastodon is mispelt. Whoops Dave
  nest(social = c(orcid, github, twitter, bluesky, mastodon)) %>% 
  dplyr::select(Name, Position, Institute, email, everything()) %>% 
  arrange(Name) %>% 
  mutate(
    social = social %>% 
      lapply(as.list) %>% 
      lapply(\(x) x[!map_lgl(x, \(y) y == "")])
  ) %>% 
  reactable(
    showPageSizeOptions = TRUE, filterable = TRUE,
    columns = list(
      Name = colDef("Name"),
      Position = colDef(
        filterInput = \(values) drop_filter(values, "Position", tbl_id)
      ),
      student = colDef(show = FALSE),
      Institute = colDef(
        "Institute", 
        filterInput = \(values) drop_filter(values, "Institute", tbl_id)
      ),
     email = colDef(
      name = "Email",
      html = TRUE, # Enable HTML rendering for clickable links
      cell = function(value) HTML(value) # Render the email link as HTML
    ),
      enabled = colDef(show = FALSE),
      added = colDef(show = FALSE),
      social = colDef(
        "External Links", maxWidth = 100, filterable = FALSE,
        cell = \(value) {
          out <- names(value) %>% 
            lapply(
              \(x) {
                col <- c(
                  orcid = "#9b0", github = "#000", twitter = "#39d",
                  bluesky = "#09f", mastodon = "#55f"
                )
                tags$a(
                  style = sprintf("color: %s", col[[x]]),
                  shiny::icon(x), href = value[[x]], target = "_blank"
                )
              }
            )
          tagList(out)
        },
        html = TRUE
      ),
      research_interests = colDef("Key Interests")
    ),
    elementId = tbl_id,
    theme = reactableTheme(
      headerStyle = list(
      backgroundColor = "#95b540", # Background color for all headers
      color = "#ffd984",            # Text color for all headers
      fontWeight = "bold",        # Bold text
      textAlign = "left",         # Align text to the left
      borderBottom = "1px solid #ddd", # Subtle border below headers
      fontSize = "14px"           # Font size for headers
    ),
    style = list(
    fontSize = "13px"           # Font size for the table body
  )
 )
)
```